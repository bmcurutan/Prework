# Programming > Trees > 2 Sum Binary Tree

/**
 * Definition for binary tree
 * class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public int t2Sum(TreeNode A, int B) { 
        if (A == null) {
            return 0;
        }
        
        Set<Integer> set = new HashSet<>();
        t2Sum(A, B, set); 
        for (int i : set) {
            if (i != (B-i) && set.contains(B-i)) {
                //System.out.println(i + " " + (B-i));
                return 1;
            }
        }
        return 0;
    }
    
    private void t2Sum(TreeNode A, int B, Set<Integer> set) {
        if (A == null) {
            return;
        }
        
        set.add(A.val);
        t2Sum(A.left, B, set);
        t2Sum(A.right, B, set);
    }
}
