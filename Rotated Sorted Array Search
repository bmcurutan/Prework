Programming > Binary Search > Rotated Sorted Array Search

public class Solution {
	// DO NOT MODIFY THE LIST
	public int search(final List<Integer> a, int b) {
	    int n = a.size();
	    if (n < 1) {
	        return -1;
	    }
	    
	    int i = 0;
	    int j = n-1;
	    int mid = (i+j)/2;
	    int pivot = -1;
	    
	    // Quick exit
	    if (a.get(i) == b) {
	        return i;
	    } else if (a.get(j) == b) {
	        return j;
	    }
	    
	    while (i < j) {
	        if (a.get(mid) == b) {
	            return mid;
	        } else if (a.get(mid) > a.get(j)) {
	            i = mid+1;
	        } else if (a.get(i) > a.get(mid)) {
	            j = mid;
	        } else {
	            break;
	        }
	        mid = (i+j)/2;
	    }
	    
	    pivot = i;
	    if (a.get(pivot) == b) {
	        return pivot;
	    }
	    
	    if (a.get(0) < b && b < a.get(pivot-1)) {
	        i = 0;
	        j = pivot-1;
	    } else if (a.get(pivot) < b && b < a.get(n-1)) {
	        i = pivot+1;
	        j = n-1;
	    } else {
	        //System.out.println("#2");
	        return -1;
	    }
	    
	    while (i < j) {
	        //System.out.println("i:" + i + " j:" + j);
	        mid = (i+j)/2;
	        if ((a.get(i) > b || a.get(j) < b) && Math.abs(j-i) <= 2) {
	            //System.out.println("#1 " + i + " " + j);
	            return -1;
	        } else if (a.get(mid) < b) {
	            i = mid+1;
	        } else if (b <= a.get(j)) {
	            j = mid;
	        }
	    }
	    //System.out.println("i:" + i);
	    return i;
	}
}
