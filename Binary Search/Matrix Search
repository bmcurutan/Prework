# Programming > Binary Search > Matrix Search

public class Solution {
	public int searchMatrix(ArrayList<ArrayList<Integer>> a, int b) {
	    int m = a.size();
	    if (m < 1) { 
	        return 1; 
	    }
	    
	    else if (m == 1) {
	        if (a.get(0).get(0) == b) {
	            return 1;
	        } else {
	            return 0;
	        }
	    }
	    
	    int n = a.get(0).size();
	    if (b < a.get(0).get(0) || b > a.get(m-1).get(n-1)) {
	        return 0;
	    }
	    
	    int i1 = 0;
	    int j1 = m-1;
	    int mid = (i1+j1)/2;
	    while (i1 < j1) {
	        if (a.get(mid).get(0) < b) {
	            i1 = mid+1;
	        } else if (a.get(mid).get(0) > b) {
	            j1 = mid;
	        } else {
	            return 1;
	        }
	        mid = (i1+j1)/2;
	    }
	    
	    if (b < a.get(i1).get(0)) {
	        i1--;
	    }
	    
	    int i2 = 0;
	    int j2 = n-1;
	    mid = (i2+j2)/2;
	    while (i2 < j2) {
	        if (a.get(i1).get(mid) < b) {
	            i2 = mid+1;
	        } else if (a.get(i1).get(mid) > b) {
	            j2 = mid;
	        } else { 
	            return 1;
	        }
	        mid = (i2+j2)/2;
	    }
	    
	    if (a.get(i1).get(j2) == b) {
	        return 1;
	    }
	    
	    return 0;
	}
}
