# Programming > Checkpoint: Level 4 > Subtract

/**
 * Definition for singly-linked list.
 * class ListNode {
 *     public int val;
 *     public ListNode next;
 *     ListNode(int x) { val = x; next = null; }
 * }
 */
 
 // 88 -> 15 -> 98
 // 10 -> 15 -> 98 (half = 1)
 
 // 28 95 59 26 16 31 39 29 8 74 14 41 41 64 88 34 21 67 23 17 41 3 38 4 45 93 92 99 24 (half = 14)
 
public class Solution {
	public ListNode subtract(ListNode a) {
	    if (a == null || a.next == null) {
	        return a;
	    }
	    
	    Stack<ListNode> stack = new Stack<>();
	    
	    int count = 0;
	    ListNode curr = a;
	    while (curr != null) {
	        stack.push(curr);
	        count++;
	        curr = curr.next;
	    }
	    
	    int half = count % 2 == 0 ? count/2 : count/2+1;
	    curr = a;
	    //System.out.println(count + " " + half);
	    while (count > half) {
	        ListNode temp = stack.pop();
	        curr.val = temp.val - curr.val;
	        count--;
	        curr = curr.next;
	    }
	    
	    return a;
	}
}
